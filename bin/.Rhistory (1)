subset.myc <- subset_taxa(subset.texcoco.binary, Trophic %in% c("a__am"))
#verify taxa missing
any(taxa_sums(subset.myc) == 0)
subset.myc
# Table for diversity measures and sample data
myc.diversity <-estimate_richness(subset.myc, measures=c("Observed", "Fisher"))
data <- cbind(sample_data(subset.myc), myc.diversity) #combine metadata with alpha diversity
data
subset.myc <- subset_taxa(subset.texcoco.binary, Trophic %in% c("a__ecm"))
#verify taxa missing
any(taxa_sums(subset.myc) == 0)
subset.myc
# Table for diversity measures and sample data
myc.diversity <-estimate_richness(subset.myc, measures=c("Observed", "Fisher"))
data <- cbind(sample_data(subset.myc), myc.diversity) #combine metadata with alpha diversity
data
subset.myc <- subset_taxa(subset.texcoco.binary, Trophic %in% c("a__sap"))
#verify taxa missing
any(taxa_sums(subset.myc) == 0)
subset.myc
# Table for diversity measures and sample data
myc.diversity <-estimate_richness(subset.myc, measures=c("Observed", "Fisher"))
data <- cbind(sample_data(subset.myc), myc.diversity) #combine metadata with alpha diversity
data
library("plyr"); packageVersion("plyr")
library("phyloseq"); packageVersion("phyloseq")
library("ggplot2"); packageVersion("ggplot2")
library("vegan"); packageVersion("vegan")
library("RColorBrewer"); packageVersion("RColorBrewer")
library("plotly"); packageVersion("plotly")
library("htmltools"); packageVersion("htmltools")
library("DT"); packageVersion("DT")
library(ggplot2)
library(dplyr)
library(tibble)
library(scales)
library(reshape2)
library(car)
library(lme4)
library(mvabund)
library(sna)
library(bipartite)
library(igraph)
library(ggnetwork)
library(statnet.common)
library(network)
library(ggpubr)
setwd("~/Google Drive/Ana+Camille/amptk_pipeline/bin")
source("../bin/1_Filter_otu_table.R")
# Subset data for Texcoco using OTU table with relative abundance
subset.texcoco.alfa <- subset_samples(phyloseq.rel, Project %in% "Texcoco")
subset.texcoco.alfa
sample_data(subset.texcoco.alfa)
sample_sums(subset.texcoco.alfa) [1:10]
# Remove OTUs that are not present in any of the samples of the subset
taxa_sums(subset.texcoco.alfa) [1:10]
subset.texcoco.alfa <- prune_taxa(taxa_sums(subset.texcoco.alfa) > 0, subset.texcoco.alfa)
any(taxa_sums(subset.texcoco.alfa) == 0)
taxa_sums(subset.texcoco.alfa) [1:10]
subset.texcoco.alfa
sum(taxa_sums(subset.texcoco.alfa))
# Subset data for Texcoco using OTU binary table
subset.texcoco.binary <- subset_samples(binary_table, Project %in% "Texcoco")
subset.texcoco.binary
sample_data(subset.texcoco.binary)
#Remove OTUs that are not present in any of the samples of the subset
taxa_sums(subset.texcoco.binary) [1:10]
subset.texcoco.binary<- prune_taxa(taxa_sums(subset.texcoco.binary) > 0, subset.texcoco.binary)
any(taxa_sums(subset.texcoco.binary) == 0)
taxa_sums(subset.texcoco.binary) [1:10]
subset.texcoco.binary
sum(taxa_sums(subset.texcoco.binary))
subset.myc <- subset.texcoco.binary
# Table for diversity measures and sample data
myc.diversity <-estimate_richness(subset.myc, measures=c("Observed", "Fisher"))
data <- cbind(sample_data(subset.myc), myc.diversity) #combine metadata with alpha diversity
data
# ANOVA
subset.all.anova <- aov(Observed ~ Host + Site + Type, data = data)
summary(subset.all.anova)
subset.myc <- subset_taxa(subset.texcoco.binary, Trophic %in% c("a__sap"))
#verify taxa missing
any(taxa_sums(subset.myc) == 0)
# Table for diversity measures and sample data
myc.diversity <-estimate_richness(subset.myc, measures=c("Observed", "Fisher"))
data <- cbind(sample_data(subset.myc), myc.diversity) #combine metadata with alpha diversity
data
# ANOVA
subset.all.anova <- aov(Observed ~ Host + Site + Type, data = data)
summary(subset.all.anova)
subset.myc <- subset_taxa(subset.texcoco.binary, Trophic %in% c("a__ecm"))
#verify taxa missing
any(taxa_sums(subset.myc) == 0)
# Table for diversity measures and sample data
myc.diversity <-estimate_richness(subset.myc, measures=c("Observed", "Fisher"))
data <- cbind(sample_data(subset.myc), myc.diversity) #combine metadata with alpha diversity
data
# ANOVA
subset.all.anova <- aov(Observed ~ Host + Site + Type, data = data)
summary(subset.all.anova)
subset.myc <- subset_taxa(subset.texcoco.binary, Trophic %in% c("a__am"))
#verify taxa missing
any(taxa_sums(subset.myc) == 0)
# Table for diversity measures and sample data
myc.diversity <-estimate_richness(subset.myc, measures=c("Observed", "Fisher"))
data <- cbind(sample_data(subset.myc), myc.diversity) #combine metadata with alpha diversity
data
# ANOVA
subset.all.anova <- aov(Observed ~ Host + Site + Type, data = data)
summary(subset.all.anova)
#Obtain 50 most abundant OTUs
Top50OTUs <- names(sort(taxa_sums(subset.texcoco.binary), TRUE)[1:50])
ent50 <- prune_taxa(Top50OTUs, subset.texcoco.binary)
ent50
taxa_names(ent50)
ntaxa(ent50)
taxa_sums(ent50)
tax_table(ent50)
subset.fam<- subset_taxa(subset.texcoco.binary, Trophic %in% "a__sap")
subset.fam
tax_table(subset.fam)
Top50OTUs <- names(sort(taxa_sums(subset.fam), TRUE)[1:50])
ent50 <- prune_taxa(Top50OTUs, subset.fam)
ent50
taxa_names(ent50)
ntaxa(ent50)
taxa_sums(ent50)
tax_table(ent50)
#What data?
ent50
tax_table(ent50)
sample_data(ent50)
abun_table <- otu_table(ent50)
abun_table
abun_table = t (abun_table)
meta_table <- sample_data(ent50)
meta_table
abun_sample_table <- data.frame(abun_table, meta_table)
abun_sample_table
mvabund_table <- mvabund(abun_sample_table [,1:50]) #format table
mvabund_table
mod2 <- manyglm(mvabund_table ~ abun_sample_table$Site*abun_sample_table$Host, family="binomial")
plot(mod2)
anova(mod2)
mod2 <- manyglm(mvabund_table ~ abun_sample_table$Site*abun_sample_table$Host, family="negative_binomial")
plot(mod2)
anova(mod2)
subset.fam<- subset_taxa(subset.texcoco.binary, Trophic %in% "a__sap")
subset.fam
tax_table(subset.fam)
subset.fam
subset.fam <- tax_glom(subset.fam, taxrank = "Family")
subset.fam
ent50<-subset.fam
#What data?
ent50
tax_table(ent50)
abun_table <- otu_table(ent50)
abun_table
#transform to binary table in case using agglomeration (e.g. at family level using tax_glom)
abun_table = transform_sample_counts(abun_table, function(x, minthreshold=0){
x[x > minthreshold] <- 1
return(x)})
head(otu_table(abun_table))
abun_table = t (abun_table)
meta_table <- sample_data(ent50)
meta_table
abun_sample_table <- data.frame(abun_table, meta_table)
abun_sample_table
mvabund_table <- mvabund(abun_sample_table [,1:90]) #format table
mvabund_table
mod2 <- manyglm(mvabund_table ~ abun_sample_table$Site*abun_sample_table$Host, family="binomial")
plot(mod2)
anova(mod2)
tax_table(subset.fam)
taxa_sums(subset.fam) [1:10]
any(taxa_sums(subset.fam) == 0)
Top50OTUs <- names(sort(taxa_sums(subset.fam), TRUE)[1:50])
ent50 <- prune_taxa(Top50OTUs, subset.fam)
ent50
taxa_names(ent50)
ntaxa(ent50)
taxa_sums(ent50)
tax_table(ent50)
#What data?
ent50
tax_table(ent50)
sample_data(ent50)
abun_table <- otu_table(ent50)
abun_table
#transform to binary table in case using agglomeration (e.g. at family level using tax_glom)
abun_table = transform_sample_counts(abun_table, function(x, minthreshold=0){
x[x > minthreshold] <- 1
return(x)})
head(otu_table(abun_table))
abun_table = t (abun_table)
meta_table <- sample_data(ent50)
meta_table
abun_sample_table <- data.frame(abun_table, meta_table)
abun_sample_table
mvabund_table <- mvabund(abun_sample_table [,1:50]) #format table
mvabund_table
mod2 <- manyglm(mvabund_table ~ abun_sample_table$Site*abun_sample_table$Host, family="binomial")
plot(mod2)
anova(mod2)
library("plyr"); packageVersion("plyr")
library("phyloseq"); packageVersion("phyloseq")
library("ggplot2"); packageVersion("ggplot2")
library("vegan"); packageVersion("vegan")
library("RColorBrewer"); packageVersion("RColorBrewer")
library("plotly"); packageVersion("plotly")
library("htmltools"); packageVersion("htmltools")
library("DT"); packageVersion("DT")
library(ggplot2)
library(dplyr)
library(tibble)
library(scales)
library(reshape2)
library(car)
library(lme4)
library(mvabund)
library(sna)
library(bipartite)
library(igraph)
library(ggnetwork)
library(statnet.common)
library(network)
library(ggpubr)
setwd("~/Google Drive/Ana+Camille/amptk_pipeline/bin")
source("../bin/1_Filter_otu_table.R")
# Subset data for Texcoco using OTU table with relative abundance
subset.texcoco.alfa <- subset_samples(phyloseq.rel, Project %in% "Texcoco")
subset.texcoco.alfa
sample_data(subset.texcoco.alfa)
sample_sums(subset.texcoco.alfa) [1:10]
# Remove OTUs that are not present in any of the samples of the subset
taxa_sums(subset.texcoco.alfa) [1:10]
subset.texcoco.alfa <- prune_taxa(taxa_sums(subset.texcoco.alfa) > 0, subset.texcoco.alfa)
any(taxa_sums(subset.texcoco.alfa) == 0)
taxa_sums(subset.texcoco.alfa) [1:10]
subset.texcoco.alfa
subset.texcoco.binary <- subset_samples(binary_table, Project %in% "Texcoco")
subset.texcoco.binary
sample_data(subset.texcoco.binary)
#Remove OTUs that are not present in any of the samples of the subset
taxa_sums(subset.texcoco.binary) [1:10]
subset.texcoco.binary<- prune_taxa(taxa_sums(subset.texcoco.binary) > 0, subset.texcoco.binary)
any(taxa_sums(subset.texcoco.binary) == 0)
taxa_sums(subset.texcoco.binary) [1:10]
subset.texcoco.binary
#Obtain 50 most abundant OTUs
Top50OTUs <- names(sort(taxa_sums(subset.texcoco.binary), TRUE)[1:50])
ent50 <- prune_taxa(Top50OTUs, subset.texcoco.binary)
ent50
taxa_names(ent50)
ntaxa(ent50)
taxa_sums(ent50)
tax_table(ent50)
options(max.print=2000)
subset.fam <- tax_glom(subset.texcoco.binary, taxrank = "Family")
subset.fam
tax_table(subset.fam)
taxa_sums(subset.fam) [1:10]
any(taxa_sums(subset.fam) == 0)
subset <- subset.texcoco.binary
spprich<-subset %>%
psmelt %>%
group_by(Family) %>%
summarize(OTUn = (unique(OTU) %>% length)) %>%
arrange(desc(OTUn))
View(spprich)
subset<- subset_taxa(subset.texcoco.binary, Family %in% c("f__ Herpotrichiellaceae", "f__ Thelephoraceae", "f__ Glomeraceae", "f__ Nectriaceae", "f__ Tricholomataceae"))
ent <- subset
#What data?
ent
tax_table(ent)
sample_data(ent)
abun_table <- otu_table(ent)
abun_table
abun_table = t (abun_table)
meta_table <- sample_data(ent)
meta_table
abun_sample_table <- data.frame(abun_table, meta_table)
abun_sample_table
mvabund_table <- mvabund(abun_sample_table [,1:263]) #format table
mvabund_table
mod2 <- manyglm(mvabund_table ~ abun_sample_table$Site*abun_sample_table$Host, family="binomial")
plot(mod2)
mod2 <- manyglm(mvabund_table ~ abun_sample_table$Site*abun_sample_table$Host, family="negative_binomial")
plot(mod2)
mod2 <- manyglm(mvabund_table ~ abun_sample_table$Site*abun_sample_table$Host, family="binomial")
plot(mod2)
anova(mod2)
subset<- subset_taxa(subset.texcoco.binary, Trophic %in% "a__ecm")
subset
spprich<-subset %>%
psmelt %>%
group_by(Family) %>%
summarize(OTUn = (unique(OTU) %>% length)) %>%
arrange(desc(OTUn))
View(spprich)
View(spprich)
subset<- subset_taxa(subset.texcoco.binary, Family %in% c("f__ Thelephoraceae", "f__ Sebacinaceae", "f__ Inocybaceae", "f__ Russulaceae", "f__ Cortinariaceae", "f__ Pyronemataceae"))
ent <- subset
#What data?
ent
tax_table(ent)
subset<- subset_taxa(subset.texcoco.binary, Trophic %in% "a__ecm")
tax_table(subset)
subset
spprich<-subset %>%
psmelt %>%
group_by(Family) %>%
summarize(OTUn = (unique(OTU) %>% length)) %>%
arrange(desc(OTUn))
View(spprich)
View(spprich)
subset<- subset_taxa(subset.texcoco.binary, Trophic %in% "a__ecm")
subset
subset<- subset_taxa(subset, Family %in% c("f__ Thelephoraceae", "f__ Sebacinaceae", "f__ Inocybaceae", "f__ Russulaceae", "f__ Cortinariaceae", "f__ Pyronemataceae"))
subset
tax_table(subset)
ent <- subset
ent
tax_table(ent)
abun_table <- otu_table(ent)
abun_table
abun_table = t (abun_table)
meta_table <- sample_data(ent)
meta_table
abun_sample_table <- data.frame(abun_table, meta_table)
abun_sample_table
mvabund_table <- mvabund(abun_sample_table [,1:139]) #format table
mvabund_table
mod2 <- manyglm(mvabund_table ~ abun_sample_table$Site*abun_sample_table$Host, family="binomial")
plot(mod2)
anova(mod2)
subset<- subset_taxa(subset.texcoco.binary, Trophic %in% "a__am")
subset
spprich<-subset %>%
psmelt %>%
group_by(Family) %>%
summarize(OTUn = (unique(OTU) %>% length)) %>%
arrange(desc(OTUn))
View(spprich)
subset
tax_table(subset)
ent <- subset
ent
subset.fam <- tax_glom(ent, taxrank = "Family")
subset.fam
tax_table(subset.fam)
subset<- subset_taxa(subset.texcoco.binary, Trophic %in% "a__am")
subset
tax_table(subset)
spprich<-subset %>%
psmelt %>%
group_by(Family) %>%
summarize(OTUn = (unique(OTU) %>% length)) %>%
arrange(desc(OTUn))
View(spprich)
View(spprich)
subset<- subset_taxa(subset.texcoco.binary, Trophic %in% "a__am")
subset
subset<- subset_taxa(subset, Family %in% c("f__ Glomeraceae", "f__ Claroideoglomeraceae", "f__ Acaulosporaceae", "f__ Diversisporaceae", "f__ Gigasporaceae", "f__ Ambisporaceae", "f__ Paraglomeraceae"))
subset
tax_table(subset)
ent <- subset
ent
abun_table <- otu_table(ent)
abun_table
abun_table = t (abun_table)
meta_table <- sample_data(ent)
meta_table
abun_sample_table <- data.frame(abun_table, meta_table)
abun_sample_table
mvabund_table <- mvabund(abun_sample_table [,1:72]) #format table
mvabund_table
mod2 <- manyglm(mvabund_table ~ abun_sample_table$Site*abun_sample_table$Host, family="binomial")
plot(mod2)
anova(mod2)
anova(mod2, p.uni="adjusted")
subset<- subset_taxa(subset.texcoco.binary, Trophic %in% "a__am")
subset
subset<- subset_taxa(subset, Family %in% c("f__ Glomeraceae"))
subset
tax_table(subset)
ent <- subset
ent
abun_table <- otu_table(ent)
abun_table
abun_table = t (abun_table)
meta_table <- sample_data(ent)
meta_table
abun_sample_table <- data.frame(abun_table, meta_table)
abun_sample_table
mvabund_table <- mvabund(abun_sample_table [,1:55]) #format table
mvabund_table
mod2 <- manyglm(mvabund_table ~ abun_sample_table$Site*abun_sample_table$Host, family="binomial")
plot(mod2)
anova(mod2)
subset<- subset_taxa(subset.texcoco.binary, Trophic %in% "a__sap")
subset
tax_table(subset)
spprich<-subset %>%
psmelt %>%
group_by(Family) %>%
summarize(OTUn = (unique(OTU) %>% length)) %>%
arrange(desc(OTUn))
View(spprich)
subset<- subset_taxa(subset.texcoco.binary, Trophic %in% "a__sap")
subset
subset<- subset_taxa(subset, Family %in% c("f__ Herpotrichiellaceae", "f__ Orbiliaceae", "f__ Aspergillaceae", "f__ Clavariaceae", "f__ Hypocreaceae"))
subset
tax_table(subset)
ent <- subset
ent
abun_table <- otu_table(ent)
abun_table
abun_table = t (abun_table)
meta_table <- sample_data(ent)
meta_table
abun_sample_table <- data.frame(abun_table, meta_table)
abun_sample_table
mvabund_table <- mvabund(abun_sample_table [,1:100]) #format table
mvabund_table
mod2 <- manyglm(mvabund_table ~ abun_sample_table$Site*abun_sample_table$Host, family="binomial")
plot(mod2)
anova(mod2)
library("phyloseq")
library("vegan")
library("ggplot2")
library("plyr"); packageVersion("plyr")
library("RColorBrewer"); packageVersion("RColorBrewer")
library("plotly"); packageVersion("plotly")
library("htmltools"); packageVersion("htmltools")
library("DT"); packageVersion("DT")
library(dplyr)
library(tibble)
library("mvabund")
library(car)
library(lme4)
library(PerformanceAnalytics)
setwd("~/Google Drive/Ana+Camille/amptk_pipeline/bin")
source("../bin/1_Filter_otu_table.R")
juniperus.rel <- phyloseq.rel  #change name of sequence abundance table for this script
juniperus.rel
texcoco.binary.models <- subset_samples(binary_table_OTU2, Project %in% "Texcoco")
texcoco.binary.models
sample_data(texcoco.binary.models)
# Remove OTUs that are not present in any of the samples of the subset (OTUs that are only present either in Izta or Texcoco)
any(taxa_sums(texcoco.binary.models) == 0)
taxa_sums(texcoco.binary.models) [1:10]
texcoco.binary.models
texcoco.binary.models <- prune_taxa(taxa_sums(texcoco.binary.models) > 0, texcoco.binary.models)
any(taxa_sums(texcoco.binary.models) == 0)
taxa_sums(texcoco.binary.models) [1:10]
texcoco.binary.models
model<- texcoco.binary.models #from binary_table_OTU2
model <- subset_taxa(model, Trophic %in% "a__am")
model
binary_table <- otu_table(model)
binary_table
meta_table <- sample_data(model)
meta_table
Host <- c("Host")
Site <- c("Site")
Type <- c("Type")
HS <- c("Site", "Host")
ST <- c("Site", "Type")
HST <- c("Site", "Host", "Type")
env_table <- subset(meta_table, select = HST)
env_table <-data.frame(env_table) #use as data frame to be able to transform to numeric
env_table[, 3]  <- as.numeric(env_table[, 3]) #not use this line if subsetting using host (or type)
env_table[, 2]  <- as.numeric(env_table[, 2])
env_table[, 1]  <- as.numeric(env_table[, 1])
env_table_scale = scale(log(env_table), center=TRUE,scale = TRUE) # no missing data allowed
env_table_scale
env_table_scale<- data.frame(env_table_scale) #must be transformed to data frame again
data=data.frame(env_table_scale, meta_table$Site, meta_table$Host, meta_table$Type, row.names=rownames(meta_table)) #add or remove column name as needed
data
colnames(data) [4] <- "Site"
colnames(data) [5] <- "Host"
colnames(data) [6] <- "Type"
data
binary_table = t (binary_table)
colnames(binary_table)
raup <- vegdist(binary_table,method="raup")
head(raup)
raup
scores(raup)
# null model
raup.min<-capscale (raup ~ 1, data)
plot(raup.min)
# model including host, site and type
raup.all <-dbrda (raup ~ Host + Site + Type, data)
plot(raup.all)
raup.db<-ordiR2step(raup.min, scope = formula (raup.all), direction =  "both")
RsquareAdj (raup.min)$adj.r.squared # adjusted R2 explained by all variables
raup.db # new model with selected variables based on on adjusted variation:
plot(raup.db)
summary( raup.db)
RsquareAdj (raup.db)$adj.r.squared
anova(raup.db)
anova(raup.db, by="term")
anova(raup.db, by="axis")
mod <- varpart(raup, data$Site, data$Type, data$Host)
plot(mod, Xnames = c('Site', 'Type', 'Host'))
subset.glm <- glm (raup ~ Type, data = data)
subset.glm <- glm (raup ~ Site, data = data)
subset.glm <- glm (raup ~ HST, data = data)
subset.glm <- glm (raup ~ Host, data = data)
